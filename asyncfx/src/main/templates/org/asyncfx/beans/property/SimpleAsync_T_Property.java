/**
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 */
// This file was generated by a tool. Do not edit.
//
package org.asyncfx.beans.property;

import org.asyncfx.PublishSource;

@PublishSource(module = "openjfx", licenses = "intel-gpl-classpath-exception")
public class SimpleAsync${boxedType}Property$!{genericType} extends Async${boxedType}PropertyBase$!{genericType} {

#if($boxedType == "Object")
    private static final PropertyMetadata DEFAULT_METADATA =
        new PropertyMetadata.Builder().create();
#else
    private static final PropertyMetadata<$numberType> DEFAULT_METADATA =
        new PropertyMetadata.Builder<$numberType>().create();
#end

    private final Object bean;

    public SimpleAsync${boxedType}Property(Object bean) {
        this(bean, DEFAULT_METADATA);
    }

    public SimpleAsync${boxedType}Property(PropertyObject bean) {
        this(bean, DEFAULT_METADATA);
    }

    public SimpleAsync${boxedType}Property(Object bean, PropertyMetadata<$numberType> metadata) {
        super(metadata);
        this.bean = bean;

        if (bean instanceof PropertyObject) {
            ((PropertyObject)bean).registerProperty(this);
        }
    }

    public SimpleAsync${boxedType}Property(PropertyObject bean, PropertyMetadata<$numberType> metadata) {
        super(bean, metadata);
        this.bean = bean;

        if (bean != null){
            bean.registerProperty(this);
        }
    }

    @Override
    public Object getBean() {
        return bean;
    }

}
